/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TeamRouteImport } from './routes/team'
import { Route as RangeRouteImport } from './routes/range'
import { Route as IndexRouteImport } from './routes/index'

const TeamRoute = TeamRouteImport.update({
  id: '/team',
  path: '/team',
  getParentRoute: () => rootRouteImport,
} as any)
const RangeRoute = RangeRouteImport.update({
  id: '/range',
  path: '/range',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/range': typeof RangeRoute
  '/team': typeof TeamRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/range': typeof RangeRoute
  '/team': typeof TeamRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/range': typeof RangeRoute
  '/team': typeof TeamRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/range' | '/team'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/range' | '/team'
  id: '__root__' | '/' | '/range' | '/team'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  RangeRoute: typeof RangeRoute
  TeamRoute: typeof TeamRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/team': {
      id: '/team'
      path: '/team'
      fullPath: '/team'
      preLoaderRoute: typeof TeamRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/range': {
      id: '/range'
      path: '/range'
      fullPath: '/range'
      preLoaderRoute: typeof RangeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  RangeRoute: RangeRoute,
  TeamRoute: TeamRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
